library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity rms_tb is
end rms_tb;

architecture tb_arch of rms_tb is
  constant CLK_PERIOD : time := 10 ns; -- Ajuste conforme necessário
  signal clk : std_logic := '0';
  signal rst : std_logic := '0';
  signal start_rms : std_logic := '0';
  signal samples : std_logic_vector(15 downto 0) := 256; 
  signal square_root : std_logic_vector(63 downto 0) := 305854; -- Raiz quadrada de 1194 em binário
  signal value : std_logic_vector(63 downto 0);
  signal rms_done : std_logic;

  constant SIM_TIME : time := 100 ns; -- Ajuste conforme necessário
begin
  -- Instância da unidade RMS
  uut: entity work.rms
    generic map (N => 64)
    port map (
      i_CLK => clk,
      i_RST => rst,
      i_START_RMS => start_rms,
      i_SAMPLES => samples,
      i_SQUARE_ROOT => square_root,
      o_VALUE => value,
      o_RMS_DONE => rms_done
    );

  -- Processo de clock
  process
  begin
    for i in 1 to 10 loop
      clk <= '0';
      wait for CLK_PERIOD / 2;
      clk <= '1';
      wait for CLK_PERIOD / 2;
    end loop;
    wait;
  end process;

  -- Processo de simulação
  process
  begin
    rst <= '1'; -- Ativar reset inicialmente
    wait for 20 ns;
    rst <= '0'; -- Desativar reset
    wait for 20 ns;
    start_rms <= '1'; -- Iniciar RMS
    wait for SIM_TIME; -- Esperar por um tempo arbitrário
    start_rms <= '0'; -- Parar RMS
    wait for 20 ns;
    assert rms_done = '1' report "Erro: o sinal o_RMS_DONE não está correto" severity error;
    report "Simulação concluída com sucesso!";
    wait;
  end process;
end tb_arch;